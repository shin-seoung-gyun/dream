package FunctionalInterface;

import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Consumer;
import java.util.function.IntConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.Predicate;

public class MainConsumer {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Consumer<String> c1 = x ->System.out.println(x.toLowerCase());
		
		c1.accept("Java Functional Interface");
		
		BiConsumer<String, String> c2 =(x,y)-> System.out.println(x+" : "+y);
		c2.accept("Java", "C++");
		
		ObjIntConsumer<String> c3 = (s,i)->{//인트형과 입력한 타입을 인자값으로 같는 consumer
			int a = Integer.parseInt(s)+i;
			System.out.println(a);
		};
		c3.accept("100", 5);
		
		IntConsumer c4 = x ->System.out.printf("%d*%d=%d\n",x,x,x*x);
		IntConsumer c5 = x ->System.out.printf("%d+%d=%d\n",x,x,x+x);
		c4.andThen(c5).accept(10);//
		
		printCondList(Car.cars, s->s.getAge()>10, s->System.out.printf("(%s) ",s.getModel()));
		
	}
	
	public static <T extends Car> void printCondList(List<T> carList, Predicate<T> predi, Consumer<T> cons) {
		for(var car : carList) {
			if(predi.test(car)){
				cons.accept(car);
			}
		}
		
		
	}
	
	
	

}
