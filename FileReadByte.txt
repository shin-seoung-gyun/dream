import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class FileReadByte {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		// 자바 6버전 이전에는 꼭 닫아야함.
		File file = new File("C:\\Users\\USER\\Desktop\\test.txt");// 경로의 파일 콘솔에 출력
		InputStream is = null;

		try {
			is = new FileInputStream(file);// 파일 임포트시 강제로 예외처리하라고뜸.
			for (int ch; (ch = is.read()) != -1;) {// 예외 처리 할 작업.
				System.out.print((char) ch);
			}
			int ch;
			while ((ch = is.read()) != -1) {
				System.out.print((char) ch);
			}

		} catch (Exception e) {// FileNotFoundException e // IOException e//
			// TODO: handle exception
		} finally {// 파일 닫아주는 처리.
			if (is != null) {
				try {
					is.close();
				} catch (IOException e2) {
					// TODO: handle exception
					System.err.println(e2);
				}
			}
		}

		// 자바 7버전 이후 바이트 파일 읽기 닫아줄 필요 없음 알아서 닫아줌.
		Path path = Paths.get("C:\\Users\\USER\\Desktop\\test.txt");
		try (InputStream is2 = Files.newInputStream(path)) {// newInputStream 닫아주는 기능을 해줌
			int ch;
			while ((ch = is2.read()) != -1) {
				System.out.print((char) ch);
			}
		} catch (Exception e) {

		}

	}

}
