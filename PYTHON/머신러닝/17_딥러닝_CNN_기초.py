#CNN : 합성곱 신경망
#이미지 처리에 주로 많이 사용하는 신경망 이며
#입력 데이터 (이미지) 의 유용한 특성만을 드러나게 하여 모델훈련
#
#합성곱 계산을 통해 얻은 출력을 특성맵(피처맵)이라고 부른다.
#필터 : 뉴런의 개수
#커널 : 가중치
#합성곱층에서 여러 개의 필터를 사용
#여러개의 필터의 가중치 (커널)도 모두 다름

#합성곱층의 처음부분은 이미지의 기본적인 특징(직선, 곡선 등)
#을 찾고 필터 개수를 늘려 층의 깊이가 깊어질수록 다양하고
#구체적인 특징을 감지

from tensorflow import keras
keras.layers.Conv2D(32,kernel_size=3, activation='relu')
#필터개수, 커널사이즈, 활성화 함수
#일반적으로 커널의 크기는 3*3,5*5가 권장됨
#특성맵은 활성화 함수를 통과한 값을 나타냄
#합성곱 신경망 : 합성곱층을 사용하는 신경망.

#패딩 
#입력과 출력이 동일한 크기를 만들려면
#더큰 입력에 합성곱을 하는 척 해야한다.
#입력(6,6), 커널(3,3) 합성곱 => 출력(4,4)
#패딩은 입력 배열 주위를 가상의 원소로 채우는것.
#패딩은 0으로 채운다. 입력 (4,4) 패딩 1 하면 => (6,6) 입력

#세임패딩 : 입력과 특성맵의 크기를 동일하게 만들기 위해
#입력주위에 0으로 패딩하는것

#밸리드 패딩 : 패딩 없이 순수한 입력 배열에서만 
#합성곱을 하여 특성 맵을 만드는 경우

keras.layers.Conv2D(32,kernel_size=3, 
    activation='relu', padding='same')
#스트라이드 : 이동의 크기(기본적으로 상하좌우 한칸씩 이동)
#대부분 1로 사용
keras.layers.Conv2D(32,kernel_size=3, 
    activation='relu', padding='same', strides=1)

#풀링 : 합성곱 층에서 만든 특성 맵의 가로세로 크기를 줄이는 역할
#풀링에는 가중치가 없다.
#최대 풀링 : 영역내의 가장 큰 값을 출력
#평균 풀링 : 영역의 평균 값을 출력
#일반적으로 최대 풀링을 사용하여 , 특징을 부각시킨다.

#(4*4)특성 맵에 (2*2)맥스 풀링 적용시 => 2*2 크기 가 된다.
#여기서 스트라이드는 풀링 크기가 된다.(위에서는 strides=2)
keras.layers.MaxPool2D(2)#(2*2)

#평균 풀링(잘안쓰임)
#중요정보를 희석할수있음
keras.layers.AvgPool2D(2)

#컬러이미지 RGB(3채널이므로)
#필터의 크기도 3차원 깊이가 필요함.




































































































